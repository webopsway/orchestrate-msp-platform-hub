# Configuration Nginx - Serveur Client/ESN Portal
# Serveur: 192.168.1.101
# Domaines: *.msp.com (wildcard)

# Redirection HTTP vers HTTPS pour tous les sous-domaines
server {
    listen 80;
    server_name *.msp.com;
    
    # Redirection HTTPS obligatoire
    return 301 https://$server_name$request_uri;
}

# Configuration principale pour tous les portails clients
server {
    listen 443 ssl http2;
    server_name *.msp.com;
    
    # Chemin vers l'application Client Portal
    root /var/www/client-portal;
    index index.html;
    
    # Certificats SSL wildcard
    ssl_certificate /etc/letsencrypt/live/msp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/msp.com/privkey.pem;
    
    # Configuration SSL optimisée pour performance
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # Headers de sécurité adaptés aux clients
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://api.supabase.co wss://realtime.supabase.co; font-src 'self'; frame-ancestors 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Variables pour tenant detection
    set $tenant_name "";
    if ($host ~* ^([^.]+)\.msp\.com$) {
        set $tenant_name $1;
    }
    
    # Logs avec tenant dans le nom de fichier
    access_log /var/log/nginx/client-portal.access.log combined;
    error_log /var/log/nginx/client-portal.error.log;
    
    # Headers custom pour tenant detection côté client
    add_header X-Tenant-Domain $tenant_name always;
    add_header X-Portal-Type "client" always;
    
    # Assets statiques avec cache agressif
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compression optimisée
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            image/svg+xml;
    }
    
    # Fichiers statiques avec cache long
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Optimisation images
        location ~* \.(jpg|jpeg|png|gif|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Headers pour optimisation des images
            add_header Accept-CH "DPR, Viewport-Width, Width";
            add_header Vary "Accept, DPR, Viewport-Width, Width";
        }
    }
    
    # Route principale - SPA React
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers pour les pages HTML (no-cache)
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Headers pour tenant detection
        add_header X-Tenant-Domain $tenant_name always;
    }
    
    # API endpoints vers Supabase (si proxy nécessaire)
    location /api/ {
        # Headers CORS pour clients
        add_header Access-Control-Allow-Origin $scheme://$host always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Client-Info" always;
        add_header Access-Control-Allow-Credentials true always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $scheme://$host;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Client-Info";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
        
        try_files $uri $uri/ /index.html;
    }
    
    # Blocage des fichiers sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|log|conf|bak)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Protection contre les attaques communes
    location ~ /\.(php|asp|aspx|jsp|py|pl|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Limitation de taille pour uploads clients
    client_max_body_size 50M;
    
    # Timeouts optimisés pour clients (plus tolérant)
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 75s;
    send_timeout 60s;
    
    # Rate limiting adapté aux clients (moins restrictif)
    limit_req_zone $binary_remote_addr zone=client_general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=client_login:10m rate=3r/m;
    
    # Rate limiting général
    location / {
        limit_req zone=client_general burst=20 nodelay;
        try_files $uri $uri/ /index.html;
    }
    
    # Rate limiting pour authentification
    location /auth {
        limit_req zone=client_login burst=5 nodelay;
        try_files $uri $uri/ /index.html;
    }
    
    # Monitoring endpoint pour health checks
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Robots.txt dynamique selon tenant
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /auth\nDisallow: /api\n";
    }
}

# Configuration spécifique pour certains clients VIP (optionnel)
server {
    listen 443 ssl http2;
    server_name premium-client.msp.com enterprise-client.msp.com;
    
    # Même config que ci-dessus mais avec optimisations spéciales
    root /var/www/client-portal;
    index index.html;
    
    # SSL config
    ssl_certificate /etc/letsencrypt/live/msp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/msp.com/privkey.pem;
    
    # Optimisations spéciales pour clients premium
    # Cache plus agressif
    location /assets/ {
        expires 2y;
        add_header Cache-Control "public, immutable";
    }
    
    # Bande passante prioritaire
    limit_rate_after 1m;
    limit_rate 0;  # Pas de limitation pour premium
    
    # Logs séparés pour clients premium
    access_log /var/log/nginx/premium-clients.access.log;
    
    # Include la config standard
    include /etc/nginx/snippets/client-portal-common.conf;
}

# Configuration globale nginx pour serveur Client
# À ajouter dans /etc/nginx/nginx.conf

# Events optimisés pour beaucoup de clients
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP global pour serveur Client
http {
    # Types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logs format avec tenant info
    log_format client_format '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            '"$http_x_forwarded_for" TENANT:$host';
    
    # Performance optimisée pour clients
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer sizes pour clients
    client_body_buffer_size 256k;
    client_max_body_size 50m;
    client_header_buffer_size 2k;
    large_client_header_buffers 4 8k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Gzip compression optimisée
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/javascript
        application/xml+rss
        application/json
        application/xml
        application/xhtml+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon;
    gzip_disable "MSIE [1-6]\.";
    
    # Cache pour fichiers ouverts
    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Rate limiting zones
    limit_req_log_level warn;
    limit_req_status 429;
    
    # Zones pour différents types de requêtes
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    
    # Include server blocks
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
} 